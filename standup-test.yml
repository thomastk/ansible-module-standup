# Playbook to smoke test standup module, to verify a new installation or test code changes in the module.
# Needs verify-cluster-checks.yml in the same directory where this playbook is run from,
#or, adjust the paths suitably.
---
- name: standup-test
  hosts: all
  become: yes
  vars:
     pre_install:
        Debian:
           - apt-get update
           - apt-get install software-properties-common
           - apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 
           - apt-get install python-yaml
        RedHat:
           - yum update
           - yum install python-yaml
     db_pkgs:
        Debian: mysql-server
        RedHat: mariadb-server mariadb
     db_service:
        Debian: mysql
        RedHat: mariadb
     web_pkgs:
        Debian: apache2
        RedHat: httpd
     web_service:
        Debian: apache2
        RedHat: mariadb
     install_cmd:
        Debian: apt-get install
        RedHat: yum install
     checks_file:
        Debian: verify-cluster-checks-ubuntu.yml
        RedHat: verify-cluster-checks-centos.yml

  tasks:
      - name: Run pre-install steps
        shell: "{{ item }}"
        with_items: "{{ pre_install[ansible_os_family] }}"

      - name: Setup test bed - install MySQL
        shell: "{{ install_cmd[ansible_os_family] }} {{ db_pkgs[ansible_os_family] }}"

      - name: Setup test bed - install Apache
        shell: "{{ install_cmd[ansible_os_family] }} {{ web_pkgs[ansible_os_family] }}"

      - name: Setup test bed - start mysql
        service: name="{{ db_service[ansible_os_family] }}" state=started

      - name: Setup test bed - start Apache
        service: name="{{ web_service[ansible_os_family] }}" state=started

      - name: Copy checks input file to remote host
        copy: 
           src: "{{ checks_file[ansible_os_family] }}"
           dest: /tmp/verify-cluster-checks.yml 

      - name: Run only db and web related checks 
        standup: 
           checks_file_path: /tmp/verify-cluster-checks.yml 
           roles: web,db
        register: output_web_mysql
        ignore_errors: true
      
      - debug: var=output_web_mysql

      - name: Run all the checks 
        standup: 
           checks_file_path: /tmp/verify-cluster-checks.yml
        register: output_all
        ignore_errors: true
          
      - debug: var=output_all

      - name: Stop mysql service so following task will run heal step
        service: name="{{ db_service[ansible_os_family] }}" state=stopped

      - name: Run db and web related checks with heal option enabled
        standup: 
           heal_state: true
           checks_file_path: /tmp/verify-cluster-checks.yml 
           roles: web,db
        register: output_heal
        ignore_errors: true

      - debug: var=output_heal

